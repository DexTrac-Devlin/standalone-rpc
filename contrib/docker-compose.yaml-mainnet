---
version: '3.8'
services:
  database:
    container_name: mainnet_database
    image: nearaurora/srpc-database
#    build:
#      dockerfile: contrib/Dockerfile.database
    restart: unless-stopped
    ports:
      - '127.0.0.1:6432:5432'
    volumes:
      - ./database:/var/lib/postgresql/data
    networks:
      static-network:
        ipv4_address: 10.123.45.253
  endpoint:
    image: nearaurora/srpc-endpoint
#    build:
#      dockerfile: contrib/Dockerfile.endpoint
    restart: unless-stopped
    init: true
    depends_on:
      - database
    environment:
      - NEAR_ENV=mainnet
      - NODE_ENV=mainnet
      - WAIT_HOSTS=10.123.45.253:5432
      - WAIT_BEFORE=1
    expose:
      - '8545'
    volumes:
      - ./config:/srv/aurora/endpoint/config # Must contain config file.
    entrypoint: ["node","lib/index.js"]
    networks:
      static-network:
  refiner:
    container_name: "mainnet_refiner"
    image: nearaurora/srpc-refiner
#    build:
#      dockerfile: contrib/Dockerfile.refiner
    restart: unless-stopped
    depends_on:
      - indexer
    environment:
      - RUST_BACKTRACE=${RUST_BACKTRACE:-1}
      - WAIT_HOSTS=10.123.45.253:5432
      - WAIT_PATHS=/refiner/.REFINER_LAST_BLOCK
      - WAIT_BEFORE=1
      - TZ=UTC0
    volumes:
      - ./config:/config # config files
      - ./engine:/engine # Output directory      
      - ./refiner:/data # Output directory
      - ./near:/near # Path to Nearcore data
    entrypoint: ["/usr/local/bin/aurora-refiner","-c","/config/refiner.json","run"]
    ports:
      - '127.0.0.1:3030:3030'
    networks:
      static-network:
        ipv4_address: 10.123.45.251
  indexer:
    container_name: mainnet_indexer
    image: nearaurora/srpc-indexer
 #   build:
 #     dockerfile: contrib/Dockerfile.indexer
    restart: unless-stopped
    init: true
    depends_on:
      - database
    environment:
      - WAIT_HOSTS=database:5432
      - WAIT_BEFORE=1
      - NEAR_ENV=mainnet
      - NODE_ENV=mainnet
    volumes:
      - ./config:/config/   # Refiner output
      - ./refiner:/refiner/ # Source (refiner output)
    entrypoint: ["/usr/local/bin/indexer","-c","/config/indexer.yaml","-s","/refiner"]
    networks:
      static-network:
        ipv4_address: 10.123.45.252
  reverseproxy:
    container_name: reverseproxy
    image: nearaurora/reverseproxy:latest
    restart: unless-stopped
    init: true
    expose:
      - '80'
    ports:
      - '10080:80'  # Remove this line to prevent listening on public IP address.
      # - '127.0.0.1:10080:80' # Remove the hashtag in the beginning of this line to enable listening on 127.0.0.1.
    volumes:
      - ./contrib/nginx/mainnet:/config
    networks:
      static-network:
        ipv4_address: 10.123.45.249
  dbupdate:
    container_name: mainnet_dbupdate
    image: nearaurora/relayer-endpoint-dev:latest
    restart: "no"
    init: true
    depends_on:
      - database
    environment:
      - NEAR_ENV=mainnet
      - NODE_ENV=mainnet
    volumes:
      - /var/aurora/mainnet/config-endpoint:/srv/aurora/relayer/config
    extra_hosts:
      - host.docker.internal:host-gateway 
    entrypoint: ["sh", "-c", "/srv/aurora/relayer/util/update/update.sh"]     
    networks:
      static-network:        
  watchtower:
    container_name: watchtower
    restart: unless-stopped
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./contrib/docker/config.json:/config.json
    command: --interval 30
networks:
  static-network:
    ipam:
      config:
         - subnet: 10.123.45.0/24
volumes:
  database:
